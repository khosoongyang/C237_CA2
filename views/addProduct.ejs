<!DOCTYPE html>
<html lang="en">
<head>
  <title>Add Product | Seam & Soul</title>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      background: #fff;
      color: #111;
      font-family: 'Poppins', sans-serif;
      min-height: 100vh;
    }
    .container {
      max-width: 560px;
      margin: 52px auto;
      background: #fff;
      border-radius: 16px;
      box-shadow: 0 2px 16px #0001;
      padding: 36px 26px 60px 26px; /* Extra bottom padding */
      border: 1px solid #eee;
    }
    h1 {
      text-align: center;
      margin-bottom: 32px;
      font-weight: 700;
      font-family: 'Poppins', sans-serif;
      color: #111;
      letter-spacing: -0.5px;
      font-size: 2.2rem;
    }
    .form-label {
      font-weight: 500;
      color: #111;
    }
    .form-control, textarea, .form-select { /* Added .form-select here */
      border-radius: 8px;
      border: 1.2px solid #222;
      font-size: 1.07rem;
      font-family: 'Poppins', sans-serif;
    }
    .form-control:focus, .form-select:focus { /* Added .form-select here */
      border-color: #111;
      box-shadow: 0 0 0 2px #1112;
    }
    .btn-primary {
      background: #111;
      border: none;
      border-radius: 8px;
      font-weight: 600;
      font-size: 1.1rem;
      width: 100%;
      padding: 11px 0;
      margin-top: 12px;
      transition: background 0.17s;
    }
    .btn-primary:hover {
      background: #222;
    }
    .alert-danger, .alert-success {
      border-radius: 8px;
      font-size: 1rem;
    }
    a {
      color: #111;
      text-decoration: underline;
      font-weight: 500;
    }
    a:hover {
      color: #333;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Add New Product</h1>
    <% if (errors && errors.length > 0) { %>
      <div class="alert alert-danger">
        <ul class="mb-0">
          <% errors.forEach(function(error){ %>
            <li><%= error %></li>
          <% }) %>
        </ul>
      </div>
    <% } %>
    <% if (success && success.length > 0) { %>
      <div class="alert alert-success">
        <%= success %>
      </div>
    <% } %>
    <form action="/addProduct" method="POST" enctype="multipart/form-data" autocomplete="off">
      <div class="form-group mb-3">
        <label for="productName" class="form-label">Clothing Name</label>
        <input type="text" class="form-control" id="productName" name="productName" required
          value="<%= formData && formData.productName ? formData.productName : '' %>">
      </div>
      <div class="form-group mb-3">
        <label for="category" class="form-label">Category</label>
        <select class="form-select" id="category" name="category" required>
          <option value="" disabled <%= !formData.category ? 'selected' : '' %>>Select a category</option>
          <option value="Women" <%= formData.category === 'Women' ? 'selected' : '' %>>Women</option>
          <option value="Men" <%= formData.category === 'Men' ? 'selected' : '' %>>Men</option>
          <option value="Kids" <%= formData.category === 'Kids' ? 'selected' : '' %>>Kids</option>
          <option value="Baby" <%= formData.category === 'Baby' ? 'selected' : '' %>>Baby</option>
        </select>
      </div>

      <div class="form-group mb-3">
        <label for="type" class="form-label">Type</label>
        <select class="form-select" id="type" name="type" required>
          <option value="" disabled selected>Select a type</option>
          </select>
      </div>

      <div class="form-group mb-3">
        <label for="quantity" class="form-label">Quantity</label>
        <input type="number" class="form-control" id="quantity" name="quantity" min="0" step="1" required
          value="<%= formData && formData.quantity ? formData.quantity : '' %>">
      </div>
      <div class="form-group mb-3">
        <label for="price" class="form-label">Price ($)</label>
        <input type="number" class="form-control" id="price" name="price" min="0" step="1" required
          value="<%= formData && formData.price ? formData.price : '' %>">
      </div>
      <div class="form-group mb-3">
        <label for="image" class="form-label">Clothing Image</label>
        <input class="form-control" type="file" id="image" name="image" accept="image/*" <%= formData && formData.image ? '' : 'required' %>>
      </div>
      <div class="form-group mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" rows="3" required><%= formData && formData.description ? formData.description : '' %></textarea>
      </div>
      <button type="submit" class="btn btn-primary">Add Clothing Item</button>
      <div class="text-center mt-3">
        <a href="/category">Back to Category</a>
      </div>
    </form>
  </div>

  <script>
    const categorySelect = document.getElementById('category');
    const typeSelect = document.getElementById('type');
    const initialSelectedCategory = '<%= formData.category || "" %>'; // Get previously selected category
    const initialSelectedType = '<%= formData.type || "" %>'; // Get previously selected type

    const typeOptions = {
      "Women": [
        "Shirts and Blouses",
        "Bottoms",
        "Outerwear",
        "Dresses and Skirts"
      ],
      "Men": [
        "T-Shirts and Sweats",
        "Shirts and Polo Shirts",
        "Outerwear",
        "Bottoms"
      ],
      "Kids": [ // Added Kids category
        "Outerwear",
        "T-Shirts and Sweaters",
        "Bottoms",
        "Dresses"
      ],
      "Baby": [
        "Newborn (0 to 24 months)",
        "Toddler (6 months to 5 year old)"
      ],

    };

    function populateTypes(selectedCategory, selectedType = '') {
      typeSelect.innerHTML = '<option value="" disabled selected>Select a type</option>'; // Reset options

      const types = typeOptions[selectedCategory];
      if (types && types.length > 0) {
        types.forEach(type => {
          const option = document.createElement('option');
          option.value = type;
          option.textContent = type;
          if (type === selectedType) { // Re-select previous type if applicable
            option.selected = true;
          }
          typeSelect.appendChild(option);
        });
        typeSelect.disabled = false; // Enable if there are types
      } else {
        typeSelect.disabled = true; // Disable if no types for category
      }
    }

    // Event listener for category change
    categorySelect.addEventListener('change', function() {
      populateTypes(this.value); // Populate with default (no specific type selected)
    });

    // Initial population on page load (useful if formData has pre-selected values)
    if (initialSelectedCategory) {
      populateTypes(initialSelectedCategory, initialSelectedType);
    } else {
      typeSelect.disabled = true; // Disable type dropdown if no category is selected initially
    }
  </script>
</body>
</html>